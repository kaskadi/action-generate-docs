service:
  name: template-kaskadi-lambda

package:
  individually: true
  exclude:
    - '**/**'

provider:
  name: aws
  runtime: nodejs12.x
  stackName: ${self:service.name}-stack
  stage: ${opt:stage, 'prod'}
  region: eu-central-1
  deploymentBucket:
    name: kaskadi-serverless-deployment-bucket
  # update this section to use proper tags for your lambda and stack
  stackTags: 
    app: your-app-name
  tags:
    app: your-app-name
    service: ${self:service.name}
    logical-unit: api-logical-unit
    type: 's3, sns, etc.'

functions:
  TemplateKaskadiLambda:
    handler: template-kaskadi-lambda.handler
    name: ${self:service.name}
    layers:
      - { Ref: TemplateKaskadiLayerLambdaLayer }
      - !Ref TemplateKaskadiLayerLambdaLayer
      - { "Fn::Join" : [ '-', ['just', 'for', 'testing'] ] }
      - !Join [ '-', ['just', 'for', 'testing'] ]
      - arn:aws:lambda:eu-central-1:111111111111:layer:test-layer:23
      - just-for-testing
    package:
      include:
        - 'template-kaskadi-lambda.js'
        - 'node_modules/**'
    # configure here the proper event(s) that should trigger your lambda
    events:
      - http:
          method: get
          path: hello
          cors: true

layers:
  TemplateKaskadiLayer:
    path: layer
    name: template-kaskadi-layer
    description: # your description here
    compatibleRuntimes:
      - nodejs10.x
      - nodejs12.x
    licenseInfo: MIT
